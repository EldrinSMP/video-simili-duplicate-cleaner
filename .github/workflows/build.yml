# .github/workflows/build.yml
name: Build & Package

on:
  workflow_dispatch:

# The single source of truth for version and name
env:
  CI_PACKAGE_VERSION: "1.13.0" # NOTE: Removed the "L-alpha" as it's non-standard. Add back if needed.
  CI_PACKAGE_NAME: "video-simili-duplicate-cleaner"

jobs:
  # JOB 1: Non-Arch x86_64 Packages
  build_non_arch_x86_64:
    name: Build Non-Arch Packages (x86_64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Define Paths & Create Directory
        id: dirs
        run: |
          echo "build-dir=${{ github.workspace }}/build-x86_64" >> "$GITHUB_OUTPUT"
          echo "package-dir=${{ github.workspace }}/packages" >> "$GITHUB_OUTPUT"
          mkdir -p ${{ github.workspace }}/packages
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential cmake pkg-config rpm libfuse2 libgl-dev qt6-base-dev libopencv-dev libavformat-dev libavcodec-dev libavutil-dev libswscale-dev
      - name: Configure and Build
        run: cmake -S QtProject_Linux -B ${{ steps.dirs.outputs.build-dir }} -DCMAKE_BUILD_TYPE=Release
      - name: Generate and Rename DEB/RPM
        run: |
          cpack --config ${{ steps.dirs.outputs.build-dir }}/CPackConfig.cmake
          mv *.deb ${{ steps.dirs.outputs.package-dir }}/${{ env.CI_PACKAGE_NAME }}-${{ env.CI_PACKAGE_VERSION }}-x86_64.deb
          mv *.rpm ${{ steps.dirs.outputs.package-dir }}/${{ env.CI_PACKAGE_NAME }}-${{ env.CI_PACKAGE_VERSION }}-x86_64.rpm
      - name: Generate AppImage & Portable Archive
        run: |
          wget -q https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          export PATH="/usr/lib/qt6/bin:$PATH"
          ./linuxdeployqt-continuous-x86_64.AppImage ${{ steps.dirs.outputs.build-dir }}/${{ env.CI_PACKAGE_NAME }} -appimage
          mv ${{ env.CI_PACKAGE_NAME }}-*.AppImage ${{ steps.dirs.outputs.package-dir }}/${{ env.CI_PACKAGE_NAME }}-${{ env.CI_PACKAGE_VERSION }}-x86_64.AppImage
          tar -czvf ${{ steps.dirs.outputs.package-dir }}/${{ env.CI_PACKAGE_NAME }}-${{ env.CI_PACKAGE_VERSION }}-x86_64-portable.tar.gz -C ${{ steps.dirs.outputs.build-dir }} .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-x86_64
          path: ${{ steps.dirs.outputs.package-dir }}

  # JOB 2: Non-Arch aarch64 Packages
  build_non_arch_aarch64:
    name: Build Non-Arch Packages (aarch64)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - name: Create Package Directory
        run: mkdir -p ${{ github.workspace }}/packages
      - name: Build in Ubuntu Container
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --platform linux/arm64 \
            -e CI_PACKAGE_VERSION=${{ env.CI_PACKAGE_VERSION }} \
            ubuntu:22.04
